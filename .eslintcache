[{"/media/junaid/SOFTWARE/Office Work/bloodbank/src/index.js":"1","/media/junaid/SOFTWARE/Office Work/bloodbank/src/reportWebVitals.js":"2","/media/junaid/SOFTWARE/Office Work/bloodbank/src/App.js":"3","/media/junaid/SOFTWARE/Office Work/bloodbank/src/components/Header/Header.js":"4","/media/junaid/SOFTWARE/Office Work/bloodbank/src/components/MainBody/MainBody.js":"5","/media/junaid/SOFTWARE/Office Work/bloodbank/src/components/MainBody/Modal/ModalDonateBlood.js":"6","/media/junaid/SOFTWARE/Office Work/bloodbank/src/components/MainBody/Modal/ModalRequestBlood.js":"7","/media/junaid/SOFTWARE/Office Work/bloodbank/src/components/AdminPanel/Admin.js":"8","/media/junaid/SOFTWARE/Office Work/bloodbank/src/components/AdminPanel/DonorCard.js":"9"},{"size":500,"mtime":1611158975826,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1611158975842,"results":"12","hashOfConfig":"11"},{"size":713,"mtime":1611590315151,"results":"13","hashOfConfig":"11"},{"size":1360,"mtime":1611595652028,"results":"14","hashOfConfig":"11"},{"size":1573,"mtime":1611590012116,"results":"15","hashOfConfig":"11"},{"size":5212,"mtime":1611592290737,"results":"16","hashOfConfig":"11"},{"size":6021,"mtime":1611509553086,"results":"17","hashOfConfig":"11"},{"size":706,"mtime":1611595677708,"results":"18","hashOfConfig":"11"},{"size":716,"mtime":1611595538446,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"2v1iex",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/junaid/SOFTWARE/Office Work/bloodbank/src/index.js",[],["41","42"],"/media/junaid/SOFTWARE/Office Work/bloodbank/src/reportWebVitals.js",[],"/media/junaid/SOFTWARE/Office Work/bloodbank/src/App.js",["43"],"/media/junaid/SOFTWARE/Office Work/bloodbank/src/components/Header/Header.js",["44"],"/media/junaid/SOFTWARE/Office Work/bloodbank/src/components/MainBody/MainBody.js",["45"],"import React from 'react';\nimport Modal from 'react-modal';\nimport ModalDonateBlood from './Modal/ModalDonateBlood';\nimport ModalRequestBlood from './Modal/ModalRequestBlood';\nconst MainBody = () => {\n    const [modalIsOpen,setIsOpen] = React.useState(false);\n    const [modal2, setModal] = React.useState(false)\n    function openModal() {\n      setIsOpen(true);\n      console.log(modalIsOpen)\n    }\n    function openModal2() {\n      setModal(true);\n    }\n\n    function afterOpenModal() {\n      // references are now sync'd and can be accessed.\n    //   subtitle.style.color = '#f00';\n      \n    }\n   \n    function closeModal(){\n      setIsOpen(false);\n    }\n    function closeModal2(){\n      setModal(false);\n    }\n    return (\n        <div>\n            <div className=\"row d-flex justify-content-center\" style={{height: '75vh'}}>\n                <div className=\"col-md-3 d-flex justify-content-between align-items-center\">\n                    <button className=\"btn btn-danger\" onClick={openModal}><i class=\"fas fa-tint\"></i> Donate Blood</button>\n                    <button className=\"btn btn-success\" onClick={openModal2}>Request for blood</button>\n                </div>\n            </div>\n            {\n                modalIsOpen &&\n                <ModalDonateBlood afterOpenModal={afterOpenModal} closeModal = {closeModal} modalIsOpen={modalIsOpen} />\n            }\n            {\n                modal2 &&\n                <ModalRequestBlood closeModal2={closeModal2} modal2={modal2} />\n            }\n            \n        </div>\n    );\n};\n\nexport default MainBody;","/media/junaid/SOFTWARE/Office Work/bloodbank/src/components/MainBody/Modal/ModalDonateBlood.js",["46","47","48"],"/media/junaid/SOFTWARE/Office Work/bloodbank/src/components/MainBody/Modal/ModalRequestBlood.js",["49","50"],"import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useForm } from \"react-hook-form\";\n\n\nconst ModalDonateBlood = ({modal2, closeModal2, afterOpenModal}) => {\n  const { register, handleSubmit, watch, errors } = useForm();\n  const[donatedBefore, setDonatedBefore] = useState();\n  const [alreadyDonated, setAlreadyDonated] = useState(\"no\")\n  const onSubmit = data =>{\n    \n  };\n\n  function checkDonor(e){\n    donatedBefore.donatedBlood.map(item => {\n      console.log(item)\n      if(e.target.value === item){\n        setAlreadyDonated(\"yes\");\n        console.log(alreadyDonated)\n      }\n      else{\n        setAlreadyDonated(\"no\");\n      }\n    })\n  }\n\n  useEffect(()=>{\n    fetch(\"https://jsonkeeper.com/b/NKZY\")\n    .then(res=> res.json())\n          .then(( data ) => {\n              setDonatedBefore(data);\n          });\n  },[])\n\n\n  const customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n  };\n \n \n  return (\n    <div>\n          \n        <Modal\n          isOpen={modal2}\n          onRequestClose={closeModal2}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n            <div className=\"p-2 mb-3\" style={{backgroundColor: '#FFD0D1'}}>\n              <p className=\"my-auto\"><strong>Provide All the necessary information</strong></p>\n            </div>\n            <form onSubmit={handleSubmit(onSubmit)} className=\"d-flex flex-column justify-content-center align-items-center\">\n            {\n                alreadyDonated === \"no\" ?   <span></span> : <h4 style={{color:'green'}}>Please Check your email</h4>\n              }\n              <input name=\"patientName\" className=\"mb-3\" defaultValue=\"\" placeholder=\"Patient Name\" ref={register({ required: true })} />\n              {errors.patientName && <span>This field is required</span>}\n            \n              <input name=\"mobile\" className=\"mb-3\" defaultValue=\"\" placeholder=\"Mobile No.\" ref={register({ required: true })} onChange={checkDonor} />\n              {errors.mobile && <span>This field is required</span>}\n          \n\n              <input name=\"alterMobile\" className=\"mb-3\" defaultValue=\"\" placeholder=\"Alternative Mobile No.\" ref={register({ required: true })} />\n              {errors.alertMobile && <span>This field is required</span>}\n\n              <input name=\"relation\" className=\"mb-3\" defaultValue=\"\" placeholder=\"Relationship with patient\" ref={register({ required: true })} />\n              {errors.relation && <span>This field is required</span>}\n\n              <div className=\"d-flex justify-content-between w-50 mb-3\">\n                <label htmlFor=\"blood\"><strong>Select Blood Group:</strong></label>\n                <select name=\"blood\" id=\"blood\" ref={register}>\n                  <option value=\"A+\">A+</option>\n                  <option value=\"A-\">A-</option>\n                  <option value=\"B+\">B+</option>\n                  <option value=\"B-\">B-</option>\n                  <option value=\"O+\">O+</option>\n                  <option value=\"O-\">O-</option>\n                  <option value=\"AB+\">AB+</option>\n                  <option value=\"AB-\">AB-</option>\n                </select>\n        \n                {errors.blood && <span>This field is required</span>}\n              </div>\n              \n            \n                <div className=\"d-flex flex-column mb-3 w-50\">\n                <label for=\"address\"><strong>Present Address:</strong></label>\n                    <textarea id=\"address\" className=\"\" name=\"address\" placeholder=\"Address\" ref={register({ required: true })}></textarea>\n\n                    {errors.address && <span>This field is required</span>}\n                </div>\n\n            <div className=\"d-flex w-50 mb-3\">\n                    <input name=\"union\" defaultValue=\"\" className=\"w-50 mr-2\" placeholder=\"Union\" ref={register({ required: true })} />\n                    {errors.union && <span>This field is required</span>}\n\n                    <input name=\"postOffice\" defaultValue=\"\"  className=\"w-50\" placeholder=\"Post Office\" ref={register({ required: true })} />\n                    {errors.postOffice && <span>This field is required</span>}\n                </div>\n\n                <div className=\"d-flex w-50 mb-3\">\n                    <input name=\"pstation\" defaultValue=\"\" className=\"w-50 mr-2\" placeholder=\"Police Station\" ref={register({ required: true })} />\n                    {errors.pstation && <span>This field is required</span>}\n\n                    <input name=\"district\" defaultValue=\"\"  className=\"w-50\" placeholder=\"District\" ref={register({ required: true })} />\n                    {errors.district && <span>This field is required</span>}\n                </div>\n\n\n              <div className=\"d-flex justify-content-around w-50\">\n                <label for=\"date\"><strong>Select Date:</strong></label>\n                <input type=\"date\" id=\"date\" className=\"mb-3\" name=\"dob\" placeholder=\"Date Of Birth\" ref={register({ required: true })} />\n    \n                {errors.dob && <span>This field is required</span>}\n              </div>\n              \n\n              <div className=\"d-flex justify-content-between w-50\">\n                <label for=\"time\"><strong>Select Time:</strong></label>\n                <input type=\"time\" id=\"time\" className=\"mb-3\" name=\"dob\" placeholder=\"Date Of Birth\" ref={register({ required: true })} />\n    \n                {errors.dob && <span>This field is required</span>}\n              </div>\n\n              \n              <input type=\"submit\" className=\"btn btn-success w-50 mb-3\" />\n              <button className=\"btn btn-danger w-50\" onClick={closeModal2}>close</button>\n        \n          </form>\n        </Modal>\n    </div>\n  );\n};\n\nexport default ModalDonateBlood;\n\n// {\"donatedBlood\":[\"joey@gmail.com\",\"monica@gmail.com\",\"rachel@gmail.com\"]}","/media/junaid/SOFTWARE/Office Work/bloodbank/src/components/AdminPanel/Admin.js",[],"/media/junaid/SOFTWARE/Office Work/bloodbank/src/components/AdminPanel/DonorCard.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":12},{"ruleId":"55","severity":1,"message":"59","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":13},{"ruleId":"55","severity":1,"message":"60","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":13},{"ruleId":"55","severity":1,"message":"61","line":7,"column":35,"nodeType":"57","messageId":"58","endLine":7,"endColumn":40},{"ruleId":"55","severity":1,"message":"62","line":7,"column":42,"nodeType":"57","messageId":"58","endLine":7,"endColumn":48},{"ruleId":"63","severity":1,"message":"64","line":15,"column":39,"nodeType":"65","messageId":"66","endLine":15,"endColumn":41},{"ruleId":"55","severity":1,"message":"61","line":7,"column":35,"nodeType":"57","messageId":"58","endLine":7,"endColumn":40},{"ruleId":"63","severity":1,"message":"64","line":15,"column":41,"nodeType":"65","messageId":"66","endLine":15,"endColumn":43},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Admin' is defined but never used.","'Modal' is defined but never used.","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]